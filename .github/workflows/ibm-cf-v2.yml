name: Build and Deploy IBMCloudFoundryV2Ray

on:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IBM_CF_API: https://api.us-south.cf.cloud.ibm.com
      IBM_CF_APP_MEM: 256M
      IBM_CF_APP_NAME: ${{ secrets.IBM_CF_APP_NAME }}
      IBM_CF_ORG_NAME: ${{ secrets.IBM_CF_ORG_NAME }}
      IBM_CF_PASSWORD: ${{ secrets.IBM_CF_PASSWORD }}
      IBM_CF_SPACE_NAME: ${{ secrets.IBM_CF_SPACE_NAME }}
      IBM_CF_USERNAME: ${{ secrets.IBM_CF_USERNAME }}
      V2RAY_DNS: ${{ secrets.V2RAY_DNS }}
      V2RAY_UUID: ${{ secrets.V2RAY_UUID }}
      V2RAY_WS_PATH_VLESS: ${{ secrets.V2RAY_WS_PATH_VLESS }}
      V2RAY_WS_PATH_VMESS: ${{ secrets.V2RAY_WS_PATH_VMESS }}
    steps:
    - name: Step 1 - Install IBM Cloud Foundry CLI
      run: |
        curl -fsSL "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zxC /tmp
        sudo install -m 755 /tmp/cf7 /usr/local/bin/cf
    - name: Step 2 - Login to IBM Cloud Foundry
      run: |
        cf login \
          -a "${IBM_CF_API}" \
          -u "${IBM_CF_USERNAME}" \
          -p "${IBM_CF_PASSWORD}" \
          -o "${IBM_CF_ORG_NAME:-$IBM_CF_USERNAME}" \
          -s "${IBM_CF_SPACE_NAME:-dev}"
    - name: Step 3 - Download V2Ray
      run: |
        curl -fsSL "https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip" -o "latest-v2ray.zip"
        unzip latest-v2ray.zip v2ray v2ctl geoip.dat geosite.dat
        rm latest-v2ray.zip
        chmod -v 755 v2*
        mv v2ray ${IBM_CF_APP_NAME}
    - name: Step 4 - Generate config.json (VMESS)
      if: ${{ env.V2RAY_WS_PATH_VMESS }}
      run: |
        base64 << TEMP > V2RAY_CONFIG
        {
          "dns": {
            "servers": [
              {
                "address": "${V2RAY_DNS:-https+local://dns.google:443/dns-query}"
              }
            ]
          },
          "inbounds": [
            {
              "port": 8080,
              "protocol": "vmess",
              "settings": {
                "clients": [
                  {
                    "alterId": 64,
                    "id": "${V2RAY_UUID}"
                  }
                ]
              },
              "streamSettings": {
                "network":"ws",
                "sockopt": {
                  "tcpFastOpen": true
                },
                "wsSettings": {
                  "path": "${V2RAY_WS_PATH_VMESS}"
                }
              }
            }
          ],
          "outbounds": [
            {
              "protocol": "freedom"
            }
          ]
        }
        TEMP
    - name: Step 4 - Generate config.json (VLESS)
      if: ${{ env.V2RAY_WS_PATH_VLESS }}
      run: |
        base64 << TEMP > V2RAY_CONFIG
        {
          "dns": {
            "servers": [
              {
                "address": "${V2RAY_DNS:-https+local://dns.google:443/dns-query}"
              }
            ]
          },
          "inbounds": [
            {
              "port": 8080,
              "protocol": "vless",
              "settings": {
                "clients": [
                  {
                    "id": "${V2RAY_UUID}"
                  }
                ],
                "decryption": "none"
              },
              "streamSettings": {
                "network":"ws",
                "sockopt": {
                  "tcpFastOpen": true
                },
                "wsSettings": {
                  "path": "${V2RAY_WS_PATH_VLESS}"
                }
              }
            }
          ],
          "outbounds": [
            {
              "protocol": "freedom"
            }
          ]
        }
        TEMP
    - name: Step 5 - Enable BBR & TFO
      run: |
         sudo sysctl -w net.core.default_qdisc=fq
         sudo sysctl -w net.ipv4.tcp_congestion_control=bbr
         sudo sysctl -w net.ipv4.tcp_fastopen=3
    - name: Step 6 - Generate manifest.yml
      run: |
        cat << TEMP > manifest.yml
        applications:
        - name: ${IBM_CF_APP_NAME}
          memory: ${IBM_CF_APP_MEM}
          random-route: true
          command: base64 -d V2RAY_CONFIG > config.json; ./${IBM_CF_APP_NAME} -config=config.json
          buildpacks:
          - binary_buildpack
        TEMP
    - name: Step 7 - Deploy IBM Cloud Foundry APP
      run: cf push
